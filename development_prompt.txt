---

# 継続開発プロンプト（初期構築完了済み）

このプロンプトを受け取ったら、**現在の作業ディレクトリが Git リポジトリ `YAMAP-AUTO-DOMO` のルートであることを前提**とし、そのルート直下にある `TASK_MANAGEMENT.md` に基づいてタスクの選定・実装・コミットを行ってください。

---

## 【1. タスク選定の方針】

1. `🛠 仕掛中タスク` に記載されているものを優先して実装
2. 空の場合は以下から選定し、30分以内で終わる粒度に分割した上で `🛠` に追加して着手

   * `🚧 問題・課題`
   * `💡 メモ / 改善案`
   * `🚀 新機能提案`

---

## 【2. 実行ルール】

* 作業対象はリポジトリ全体
* 実装したコード、テスト、ドキュメントは原則として既存ディレクトリ構造に準拠すること
* **既存の構造に合致しない新機能やスクリプトを実装する場合は、ルート直下に新たなディレクトリを作成してもよい。ただし、事前にユーザーへ提案し、明確な許諾を得ること。**
* すべてのコード・テスト・スクリプトは Git 管理下にあること
* 各コミットで `TASK_MANAGEMENT.md` を更新し、コミットハッシュまたは Issue 番号を必ず追記すること
* `TASK_MANAGEMENT.md` 冒頭の「最終更新日時」を毎回更新すること
* 完了したタスクは `✅ 完了タスク` に移動すること（チェックボックス付き）

---

## 【3. テストと品質要件】
* テスト実行によって生成される一時的なアウトプット（モデル、予測結果ファイル、ログなど）は、.gitignore に追加する等してコミット対象としないこと

---

## 【4. エラー発生時の対応】

* `ModuleNotFoundError` や `ImportError` などで `pytest` が通らない場合は、`❗手動確認依頼` セクションに記載してコミットしてよい
* Jules のエラーや自動修正不可の事象に遭遇した場合も、途中の進捗を記録してコミットし、`🛠` にタスクを残すこと
* `run_in_bash_session` でファイル操作エラーが出る場合は `replace_with_git_merge_diff` 等での回避を許可する

---

## 【5. 応答形式（例）】

```
Summary  
戦略別ログの CLI 指定オプションを追加しました

Commits  
abc1234 feat: --strategy オプションを追加  
def5678 test: ログ出力に関するユニットテストを追加

Next Action  
次は戦略学習結果のバックテスト精度改善に着手します
```

---

## 【6. 完了条件】

* `🛠 仕掛中タスク` が完了していること。あるいは、途中でも完了した箇所まででコミットし、どこまで完了し、何が問題で仕掛中のままになっているのかが明確に記録されていること。
* `README.md` の実行例でモデル学習と予測が正常に行えること

---

## 【7. その他のルール】


---

## 【8. コミュニケーションルール】

* **Jules からの返答はすべて日本語で行うこと**
* **Jules への指示、およびコミットメッセージはすべて日本語で記述すること**
* **コミットやpushのメッセージは内容を要約し、日本語でかつ原則200文字以内に簡潔に記載すること**

---

## 【9. 実行日】

* 実行日時は JST（日本時間）に基づき、自動で記録すること
* Unix 環境では以下のコマンドを用いて JST 日付を取得し、`TASK_MANAGEMENT.md` に記載してください
* 他にも実行日を記述した方が後のデバッグやタスクの作業指示に良いとする箇所は日時を記録して下さい

  ```bash
  TZ=Asia/Tokyo date '+%Y/%m/%d'
  ```

---
